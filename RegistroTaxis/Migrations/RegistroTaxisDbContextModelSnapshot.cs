// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistroTaxis.Data;

#nullable disable

namespace RegistroTaxis.Migrations
{
    [DbContext(typeof(RegistroTaxisDbContext))]
    partial class RegistroTaxisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RegistroTaxis.Data.Entidades.RegistroDiario", b =>
                {
                    b.Property<Guid>("RegistroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Combustible")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("Combustible");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha");

                    b.Property<decimal>("Gastos")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("Gastos");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Observacion");

                    b.Property<decimal>("PagoBase")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("PagoBase");

                    b.Property<decimal>("PagoConductor")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("PagoConductor");

                    b.Property<decimal>("PagoDueño")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("PagoDueño");

                    b.Property<Guid>("TaxiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalDia")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("TotalDia");

                    b.HasKey("RegistroId");

                    b.HasIndex("TaxiId");

                    b.ToTable("RegistroDiario");
                });

            modelBuilder.Entity("RegistroTaxis.Data.Entidades.Taxis", b =>
                {
                    b.Property<Guid>("TaxiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Observacion");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Placa");

                    b.HasKey("TaxiId");

                    b.ToTable("Taxis");
                });

            modelBuilder.Entity("RegistroTaxis.Data.Entidades.Usuarios", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Contraseña");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NombreUsuario");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RegistroTaxis.Data.Entidades.RegistroDiario", b =>
                {
                    b.HasOne("RegistroTaxis.Data.Entidades.Taxis", "Taxis")
                        .WithMany("RegistrosDiarios")
                        .HasForeignKey("TaxiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Taxis");
                });

            modelBuilder.Entity("RegistroTaxis.Data.Entidades.Taxis", b =>
                {
                    b.Navigation("RegistrosDiarios");
                });
#pragma warning restore 612, 618
        }
    }
}
